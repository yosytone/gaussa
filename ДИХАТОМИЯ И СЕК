import math
import numpy

e = 1e-5
#desmos
def func(x):

    return math.sin(x)#(3;5)
    #return (x-1)(x-2)(x-3)#(-1;8)
    #return math.log(x) #(0.5;4)
    #return math.exp(x)+x #(-2;4)


def half_divide_method(a, b, f):
    x = (a + b) / 2
    it = 0
    while math.fabs(f(x)) >= e:
        x = (a + b) / 2
        a, b = (a, x) if f(a) * f(x) < 0 else (x, b)
        it += 1
    if f(a) * f(x) < 0 and f(b) * f(x) < 0:
        return 0
    else:
        print("0 найден в точке ", x, "с помощью ", it, "итераций - бисекция для 1 точки")
        return x


def secant(f, x0, x1, tol=e, max_iterations=100):
    fx0 = f(x0)
    fx1 = f(x1)
    start = x0
    end = x1
    while abs(fx1) >= tol and max_iterations != 0:
        x2 = (x0 * fx1 - x1 * fx0) / (fx1 - fx0)
        x0, x1 = x1, x2
        fx0, fx1 = fx1, f(x2)
        max_iterations -= 1
    if x1<start or x1>end:
        return 0
    else:
        print("0 найден в точке ", x1, "с помощью ", 100 - max_iterations, "итераций - секущая")
        return x1


def divide_method(a, b, f, it):
    x = (a + b) / 2
    if math.fabs(f(x)) >= e:
        if math.fabs(a-b) > e:
            divide_method(a, x, f, it+1)
            divide_method(x, b, f, it+1)
    else:
        print("0 найден в точке ", x, "с помощью ", it, "итераций - бисекция для 2 точек")


start = 3.0
end = 5.0
step = 0.1
x = numpy.arange(start, end, step)
y = []
for i in x:
    y.append(func(i))
result1 = half_divide_method(start, end, func)
result2 = secant(func, start, end)
# print("Разница между бисекцией и секущей: ", abs(result1 - result2))
print("")
divide_method(start, end, func,0)

#(x-1)(x-2)(x-3)
